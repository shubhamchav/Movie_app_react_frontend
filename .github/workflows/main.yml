name: Build and Push to Amazon ECR

on:
  push:
    branches:
      - main   
      
permissions:
  id-token: write   
  contents: read
  
env:
  AWS_REGION: ap-south-1               
  ECR_REPOSITORY: react_movie_app      
  

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push image to ECR
      - name: Build, Tag, and Push Docker Image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_TAG=${{ github.sha }}

          echo "Building image: $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build --build-arg REACT_APP_API_URL=${{ env.REACT_APP_API_URL }} \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .

          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      # (Optional) Tag image as latest
      - name: Tag as latest
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

          docker tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.sha }} \
            $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest

          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
